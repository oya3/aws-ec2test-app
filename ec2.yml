AWSTemplateFormatVersion: 2010-09-09
Description: A simple EC2 instance

# parameters.json に外部指定可能なパラメータ
# - parameters.json にはすべて文字列で記載する必要がる様子
Parameters:
  MyAppName:
    Type: String
    Default: TestApp
  MyInstanceType:
    Type: String
    Default: t2.micro
  MyVolumeSize:
    Type: Number
    Default: 10

Resources:
  MyVPC:
    Type: 'AWS::EC2::VPC'
    Properties:
      CidrBlock: 10.0.0.0/16
      EnableDnsSupport: true
      EnableDnsHostnames: true
      Tags:
        - Key: Name
          Value: !Sub "${MyAppName}-VPC"

  # インターネット接続するため InternetGateway を紐づけておく
  MyInternetGateway:
    Type: 'AWS::EC2::InternetGateway'

  AttachGateway:
    Type: 'AWS::EC2::VPCGatewayAttachment'
    Properties:
      VpcId: !Ref MyVPC
      InternetGatewayId: !Ref MyInternetGateway

  MyRouteTable:
    Type: 'AWS::EC2::RouteTable'
    Properties:
      VpcId: !Ref MyVPC

  MyRoute:
    Type: 'AWS::EC2::Route'
    DependsOn: AttachGateway
    Properties:
      RouteTableId: !Ref MyRouteTable
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId: !Ref MyInternetGateway

  SubnetRouteTableAssociation:
    Type: 'AWS::EC2::SubnetRouteTableAssociation'
    Properties:
      SubnetId: !Ref MySubnet
      RouteTableId: !Ref MyRouteTable

  MySubnet:
    Type: 'AWS::EC2::Subnet'
    Properties:
      VpcId: !Ref MyVPC
      CidrBlock: 10.0.1.0/24
      Tags:
        - Key: Name
          Value: !Sub "${MyAppName}-Subnet"

  # SSH,http,https をinboundで許可しておく
  MySecurityGroup:
    Type: 'AWS::EC2::SecurityGroup'
    Properties:
      GroupDescription: My security group
      VpcId: !Ref MyVPC
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 22
          ToPort: 22
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp
          FromPort: 80
          ToPort: 80
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp
          FromPort: 443
          ToPort: 443
          CidrIp: 0.0.0.0/0
      Tags:
        - Key: Name
          Value: !Sub "${MyAppName}-SG"

  # こので作成した秘密鍵は AWS Systems Manager (SSM) のパラメータストアに
  # /ec2/keypair/{key_pair_id} という名前で作成される。任意の名前は指定不可
  # - https://ap-northeast-1.console.aws.amazon.com/systems-manager
  MyKeyPair:
    Type: 'AWS::EC2::KeyPair'
    Properties:
      KeyName: !Sub "${MyAppName}-KeyPair"

  # Elastic IP を生成して ec2 に割り当てる
  MyEIP:
    Type: "AWS::EC2::EIP"
    Properties:
      Domain: "vpc"
      Tags:
        - Key: Name
          Value: !Sub "${MyAppName}-EIP"

  # EC2 インスタンスの生成
  MyEC2Instance:
    Type: "AWS::EC2::Instance"
    Properties:
      ImageId: ami-0d52744d6551d851e # ubuntu
      InstanceType: !Ref MyInstanceType
      KeyName: !Ref MyKeyPair
      NetworkInterfaces:
        - AssociatePublicIpAddress: "true"
          DeviceIndex: "0"
          GroupSet:
            - !Ref MySecurityGroup
          SubnetId: !Ref MySubnet
      BlockDeviceMappings:
        - DeviceName: "/dev/sda1"
          Ebs:
            VolumeSize: !Ref MyVolumeSize
            DeleteOnTermination: "true"
            VolumeType: "gp2"
      UserData:
        Fn::Base64: |
          #!/bin/bash
          apt update && sudo apt upgrade -y
          apt install git curl -y
          apt install apache2 apache2-dev -y
          apt install subversion git -y
      Tags:
        - Key: Name
          Value: !Sub "${MyAppName}-EC2"

  EIPAssociation:
    Type: "AWS::EC2::EIPAssociation"
    Properties:
      EIP: !Ref MyEIP
      InstanceId: !Ref MyEC2Instance

